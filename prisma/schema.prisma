// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// user
model User {
  id             String   @id @default(uuid()) 
  name           String
  email          String   @unique
  password       String
  role           Role     @default(customer)  
  contactNo      String
  address        String
  profileImg     String
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  reviewAndRatings  ReviewAndRating[]
  orders  Order[]
  
  @@map("user")
}

//Category
model Category {
  id         String   @id @default(uuid()) 
  title      String
  books      Book[]
  bookcategories  BookCategory[]

  @@map("categories")
}

// user
model Book {
  id              String       @id @default(uuid()) 
  title           String
  author          String
  price           Float
  genre           String
  publicationDate DateTime 

  category Category @relation(fields: [categoryId], references: [id])
  categoryId       String   
  createdAt        DateTime          @default(now())
  updatedAt        DateTime          @updatedAt
  reviewAndRatings ReviewAndRating[] 
  bookcategories  BookCategory[]
  

  @@map("books")
}

model ReviewAndRating {
  id              String       @id @default(uuid()) 
  review          String
  rating          Int

  user User  @relation(fields: [userId], references: [id])
  userId          String

  book Book  @relation(fields: [bookId], references: [id])
  bookId          String
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  @@map("review_and_ratings")
}

// order
model Order {
  id            String    @id  @default(uuid())

  user User @relation(fields: [userId], references: [id])
  userId        String
  orderedBooks Json
  status        OrderStatus    @default(pending)
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt

  @@map("orders")
}



// schema.prisma

// model OrderedBook {
  // id       String @id @default(uuid())

  // order    Order   @relation(fields: [orderId], references: [id])
  // orderId  String

  // book     Book  @relation(fields: [bookId], references: [id])
  // bookId   String

  // quantity Int

  // @@map("orderedBooks")
// }

model BookCategory {

  book Book @relation(fields: [bookId], references: [id])
  bookId      String

  category Category @relation(fields: [categoryId], references: [id])
  categoryId  String

  @@id([bookId, categoryId])
  @@map("book_category")
}

 enum Role {
   admin
   customer
 }


enum OrderStatus {
 pending
 shipped
 delivered
}
